data = saloneMapData, ~Longitude, ~Latitude,
label =~saloneMapData$`Map Label`,
clusterOptions = markerClusterOptions(iconCreateFunction=JS("function (cluster) {
var childCount = cluster.getChildCount();
if (childCount < 100) {
c = 'rgba(154,40,40, 0.5);'
} else if (childCount < 1000) {
c = 'rgba(240, 194, 12, 1);'
} else {
c = 'rgba(241, 128, 23, 1);'
}
return new L.DivIcon({ html: '<div style=\"background-color:'+c+'\"><span>' + childCount + '</span></div>', className: 'marker-cluster', iconSize: new L.Point(40, 40) });
}")),
labelOptions = labelOptions(
noHide = T,
direction = 'auto',
style = list(
"color" = "black",
"font-family" = "arial",
"box-shadow" = "2px 2px rgba(0,0,0,0.25)",
"font-size" = "12px",
"border-color" = "rgba(0,0,0,0.5)"
)
)
) %>%
addPolygons( weight = .8,  color = "#5c636b" ,fill = FALSE, stroke = TRUE, smoothFactor = 0.8)
})
output$tablePlot<- renderTable({
saloneMapData <- read_csv('saloneMapData.csv')
saloneMapData <- saloneMapData %>%
select(District,Cases,`Cases per 100,000`)
})
}
runApp()
runApp()
runApp()
server <- function(input, output) {
# Read in Sierra Leone Covid Data
WHO_COVID_19_global_data <- read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv")
salone <- WHO_COVID_19_global_data %>%
filter(Country == 'Sierra Leone') %>%
filter(Date_reported > ymd(20200331)) %>%
mutate(Date =ymd(Date_reported))
# Add  dates for footnote
througDate <- max(salone$Date_reported)
dataAs <- today()
output$casesPlot <- renderHighchart({
# Create Sierra Leone Cases Trend
salonePlot <- hchart(salone, "column", hcaes(x= Date, y=New_cases))%>%
hc_yAxis(
title = list(text = "New Cases"),
max = 100,
opposite = FALSE
) %>%
hc_title(
text = "Trend in COVID-19 Cases in Sierra Leone",
align = "center") %>%
hc_caption(
text = paste0("Data Through: ", througDate,"<br>Data As Of: ", dataAs,"<br>Data Source: World Health Organization<br>Powered by Afromation"),
style = list(fontSize = "12px")
)
salonePlot <-  salonePlot %>%
hc_add_theme(thm)
salonePlot
})
output$deathPlot <- renderHighchart({
# Create Sierra Leone Cases Trend
salonePlot <- hchart(salone, "column", hcaes(x= Date, y=New_deaths))%>%
hc_yAxis(
title = list(text = "New Deaths"),
opposite = FALSE
) %>%
hc_title(
text = "Trend in COVID-19 Deaths in Sierra Leone",
align = "center") %>%
hc_caption(
text = paste0("Data Through: ", througDate,"<br>Data As Of: ", dataAs,"<br>Data Source: World Health Organization<br>Powered by Afromation"),
style = list(fontSize = "12px")
)
salonePlot <-  salonePlot %>%
hc_add_theme(hc_theme_bloom())
salonePlot
})
output$mapPlot <- renderLeaflet({
saloneMapData <- read_csv('saloneMapData.csv')
salonePoly <- readOGR('https://raw.githubusercontent.com/skokenes/sierra-leone-district-geojson/master/SLE_adm2.json')
saloneMap <-  leaflet(salonePoly) %>%
addProviderTiles('CartoDB.Positron')  %>%
setView(-11.79931640625, 8.504970203442133, zoom = 7) %>%
addLabelOnlyMarkers(
data = saloneMapData, ~Longitude, ~Latitude,
label =~saloneMapData$`Map Label`,
clusterOptions = markerClusterOptions(iconCreateFunction=JS("function (cluster) {
var childCount = cluster.getChildCount();
if (childCount < 100) {
c = 'rgba(154,40,40, 0.5);'
} else if (childCount < 1000) {
c = 'rgba(240, 194, 12, 1);'
} else {
c = 'rgba(241, 128, 23, 1);'
}
return new L.DivIcon({ html: '<div style=\"background-color:'+c+'\"><span>' + childCount + '</span></div>', className: 'marker-cluster', iconSize: new L.Point(40, 40) });
}")),
labelOptions = labelOptions(
noHide = T,
direction = 'auto',
style = list(
"color" = "black",
"font-family" = "arial",
"box-shadow" = "2px 2px rgba(0,0,0,0.25)",
"font-size" = "12px",
"border-color" = "rgba(0,0,0,0.5)"
)
)
) %>%
addPolygons( weight = .8,  color = "#5c636b" ,fill = FALSE, stroke = TRUE, smoothFactor = 0.8)
})
output$tablePlot<- renderTable({
saloneMapData <- read_csv('saloneMapData.csv')
saloneMapData <- saloneMapData %>%
select(District,Cases,`Cases per 100,000`) %>%
mutate(Cases = as.integer(Cases))
})
}
runApp()
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(leafletOutput("mapPlot")),
fluidRow(verbatimTextOutput("Data as of 4 Dec 2020 \m Source: Government of Sierra Leone, Ministry of Information and Communication"))
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
verbatimTextOutput(
"Data as of 4 Dec 2020 \n Source: Government of Sierra Leone, Ministry of Information and Communication"
)
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
runApp()
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
"Data as of 4 Dec 2020 \n Source: Government of Sierra Leone, Ministry of Information and Communication"
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
runApp()
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
column(12,
"Data as of 4 Dec 2020 \n Source: Government of Sierra Leone, Ministry of Information and Communication")
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
runApp()
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
column(2," "),
column(10,
"Data as of 4 Dec 2020 \n Source: Government of Sierra Leone, Ministry of Information and Communication")
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
runApp()
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
column(2," "),
column(10,
HTML("Data as of 4 Dec 2020 \n Source: Government of Sierra Leone, Ministry of Information and Communication")
)
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
runApp()
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
column(2," "),
column(10,
HTML("Data as of 4 Dec 2020"),
HTML("Source: Government of Sierra Leone, Ministry of Information and Communication")
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
)
runApp()
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
column(2," "),
column(10,
HTML("Data as of 4 Dec 2020"),
HTML("Source: Government of Sierra Leone, Ministry of Information and Communication")
)
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
runApp()
runApp()
runApp()
runApp()
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
column(1," "),
column(11,
HTML("Data as of 4 Dec 2020 |Source: Government of Sierra Leone, Ministry of Information and Communication"),
HTML()
)
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
column(12,
HTML("Data as of 4 Dec 2020 |Source: Government of Sierra Leone, Ministry of Information and Communication")
)
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
runApp()
runApp()
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
column(1,
HTML(" ")
),
column(11,
HTML("  Data as of 4 Dec 2020 | Source: Government of Sierra Leone, Ministry of Information and Communication")
)
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
runApp()
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
column(1,
HTML(" ")
),
column(11,
HTML("  Data as of 4 Dec 2020 | Source: Sierra Leone Ministry of Information and Communication")
)
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
shinytest::recordTest("~/Google Drive/Projects/Afromation Full/Afromation/Digital Projects/Salone Against COVID")
ui <- fluidPage(
tags$style(type = "text/css", "#mapPlot {height: calc(100vh - 80px) !important;}"),
fluidRow(
tabsetPanel(
tabPanel("New Cases by Day",
highchartOutput("casesPlot")
),
tabPanel("New Deaths by Day",
highchartOutput("deathPlot")
),
tabPanel("Cases by District",
fluidRow(
column(8,
fluidRow(
leafletOutput("mapPlot")
),
fluidRow(
column(1,
HTML("")
),
column(11,
HTML("  Data as of 4 Dec 2020 | Source: Sierra Leone Ministry of Information and Communication")
)
)
),
column(4,  tableOutput("tablePlot"))
)
)
)
)
)
runApp()
runApp()
