geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %y") +
theme_gdocs()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme_gdocs()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.line.y = "none"
) +
theme_gdocs()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.line.y = element_blank()
) +
theme_gdocs()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank()
) +
theme_gdocs()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank()
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_cases), fill= "#145389") +
geom_line(aes(y=seven_day_avg_cases), size = 1.5) +
labs(
title = "Trend in COVID-19 Cases in Sierra Leone",
x = "Date Reported",
y = "New Cases"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
legend.position = "bottom"
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_cases), fill= "#145389") +
geom_line(aes(y=seven_day_avg_cases), size = 1.5) +
labs(
title = "Trend in COVID-19 Cases in Sierra Leone",
x = "Date Reported",
y = "New Cases"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
legend.position = "top"
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_cases), fill= "#145389") +
geom_line(aes(y=seven_day_avg_cases), size = 1.5) +
labs(
title = "Trend in COVID-19 Cases in Sierra Leone",
x = "Date Reported",
y = "New Cases"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme_hc() +
theme(
axis.ticks.y.left  = element_blank(),
legend.position = "top"
) +
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
title = element_text(ali)
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_cases), fill= "#145389") +
geom_line(aes(y=seven_day_avg_cases), size = 1.5) +
labs(
title = "Trend in COVID-19 Cases in Sierra Leone",
x = "Date Reported",
y = "New Cases"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme_hc() +
theme(
axis.ticks.y.left  = element_blank(),
legend.position = "top"
)
salone <- WHO_COVID_19_global_data %>%
filter(Country == 'Sierra Leone') %>%
filter(Date_reported > ymd(20200331)) %>%
mutate(Date =ymd(Date_reported),
seven_day_avg_cases = rollmean(New_cases, 7, align = "right", na.pad = TRUE),
seven_day_avg_deaths = rollmean(New_deaths, 7, align = "right", na.pad = TRUE))
saloneSum$New_deaths[1]
saloneSum <- salone %>%
arrange(desc(Date_reported))
salone %>%
arrange(desc(Date_reported))
output$avgCaseNewOutput <- renderText({format(saloneSum$seven_day_avg_cases[1], big.mark = ",")})
output$avgDeathNewOutput <- renderText({format(saloneSum$seven_day_avg_deaths[1], big.mark = ",")})
output$avgCaseNewOutput <- renderText({format(saloneSum$seven_day_avg_cases[1], big.mark = ",")})
output$avgDeathNewOutput <- renderText({format(saloneSum$seven_day_avg_deaths[1], big.mark = ",")})
library(tidyverse)
library(magrittr)
library(shiny)
library(lubridate)
library(ggthemes)
library(extrafont)
library(leaflet)
library(rgdal)
library(highcharter)
library(rsconnect)
library(zoo)
runApp()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_cases), fill= "#355680") +
geom_line(aes(y=seven_day_avg_cases), size = 1.5) +
labs(
title = "Trend in COVID-19 Cases in Sierra Leone",
x = "Date Reported",
y = "New Cases"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme_hc() +
theme(
axis.ticks.y.left  = element_blank(),
legend.position = "top"
)
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
title = element_text(ali)
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
) +
theme_hc()
runApp()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
title = element_text(size = 16)
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(12),
title = element_text(size = 16)
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(size= 12),
title = element_text(size = 16)
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(size= 12),
plot.title = element_text(size = 16),
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_cases), fill= "#355680") +
geom_line(aes(y=seven_day_avg_cases), size = 1.5) +
labs(
title = "Trend in COVID-19 Cases in Sierra Leone",
x = "Date Reported",
y = "New Cases"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme_hc() +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(size= 12),
title = element_text(size = 16),
)
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_cases), fill= "#355680") +
geom_area(aes(y=seven_day_avg_cases), size = 1.5) +
labs(
title = "Trend in COVID-19 Cases in Sierra Leone",
x = "Date Reported",
y = "New Cases"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme_hc() +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(size= 12),
title = element_text(size = 16),
)
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_cases), fill= "#355680") +
geom_line(aes(y=seven_day_avg_cases), size = 1.5) +
labs(
title = "Trend in COVID-19 Cases in Sierra Leone",
x = "Date Reported",
subtitle = format(max(salone$Date_reported), "%b %d,  %Y"),
y = "New Cases"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme_hc() +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(size= 12),
title = element_text(size = 16),
)
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
subtitle = format(max(salone$Date_reported), "%b %d,  %Y"),
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(size= 12),
title = element_text(size = 16),
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
subtitle = format(max(salone$Date_reported), "%b %d,  %Y"),
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(size= 12),
title = element_text(size = 16),
plot.title = element_text(hjust = 0.5)
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
subtitle = format(max(salone$Date_reported), "%b %d,  %Y"),
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(size= 12),
title = element_text(size = 16),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_cases), fill= "#355680") +
geom_line(aes(y=seven_day_avg_cases), size = 1.5) +
labs(
title = "Trend in COVID-19 Cases in Sierra Leone",
x = "Date Reported",
subtitle = format(max(salone$Date_reported), "%b %d,  %Y"),
y = "New Cases"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(size= 12),
title = element_text(size = 16),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
) +
theme_hc()
salone %>%
ggplot(aes(x = Date_reported)) +
geom_col(aes(y=New_deaths), fill= "#5a817e") +
geom_line(aes(y=seven_day_avg_deaths), size = 1.5) +
labs(
title = "Trend in COVID-19 Deaths in Sierra Leone",
x = "Date Reported",
subtitle = format(max(salone$Date_reported), "%b %d,  %Y"),
y = "New Deaths"
) +
scale_x_date(date_labels = "%b %d,  %Y") +
theme(
axis.ticks.y.left  = element_blank(),
axis.text = element_text(size= 12),
title = element_text(size = 16),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
) +
theme_hc()
source('~/Google Drive/Projects/Afromation Full/Afromation/Digital Projects/Salone Against COVID Mission Page/Untitled.R')
library(tidyverse)
## Importing/exporting data
library(rio)
## Formatting ggplot theme
library(showtext)
library(ggsci)
font_add_google("Nunito Sans", "Nunito Sans")
font_add_google("Roboto Mono", "Roboto Mono")
showtext_auto()
theme_set(theme_light(base_size = 18, base_family = "Nunito Sans"))
# Get data ----
vaccination_data_raw <- import("https://covid.ourworldindata.org/data/owid-covid-data.csv")
# Manipulate data ----
vaccination_tbl <-  vaccination_data_raw %>%
## Select desired columns
select(iso_code,
continent,
location,
date,
people_fully_vaccinated_per_hundred,
total_vaccinations) %>%
## Remove rows that don't have data for percent of people fully vaccinated
drop_na(people_fully_vaccinated_per_hundred) %>%
## Filter out rows to only select the row for each country with the most up-to-date vaccination information
group_by(location) %>%
mutate(max_date = max(date)) %>%
filter(max_date == date)
# Get tables and values to be plotted ----
## World_vaccination rate for vertical line
world_vaccination <- vaccination_tbl %>%
filter(location == "World") %>%
pull(people_fully_vaccinated_per_hundred)
## Continent table
continent_vaccination_tbl <- vaccination_tbl %>%
### Get rows for just the continents
filter(continent == "" & location != "European Union", location !="World",location !="International") %>%
### Renaming the location column
select(-continent) %>%
rename(continent = location)
## COuntry table
country_vaccination_tbl <- vaccination_tbl %>%
filter(continent != "")
# Plot data ----
country_vaccination_tbl %>%
## Base Layer - Initializing and mapping data to the plot
ggplot(aes(x = people_fully_vaccinated_per_hundred, y = continent, color = continent)) +
## Layer 1 - Country points
geom_point(data = continent_vaccination_tbl,
aes(x = people_fully_vaccinated_per_hundred,
y = continent),
size = 6,
# alpha= .8
) +
##  Layer 2 - COntinent points
geom_jitter(size = 3,  height = .3, alpha= .25) +
#  stat_summary(fun = mean, geom = "point", size = 6) +
## Layer 3 - World Vaccination rate line
geom_vline(aes(xintercept = world_vaccination), color = "gray70", linetype = "dashed")+
## Layer 4 - Lines from continent points to World Rate line
geom_segment(data = continent_vaccination_tbl,
aes(y = continent, yend = continent,
x = world_vaccination, xend = people_fully_vaccinated_per_hundred),
size = 0.8
) +
## Color theme
#   scale_color_simpsons()+
scale_color_brewer(palette="Dark2") +
## Layer 5 - Labels
labs(
x = "Percent of Population Fully Vaccinated",
size = "Doses Administered",
title = "Percent of Pepole Fully Vaccinated by Continent",
# linetype = "US Average",
#subtitle = vaxDate,
caption = "Data Source: Our World in Data"
) +
## Plot theme
theme(
legend.position = "none",
axis.title = element_text(size = 16),
axis.text.x = element_text(family = "Nunito Sans", size = 12),
panel.grid = element_blank(),
axis.title.y = element_blank()
)
