{
    "type": [
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        2,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        3,
        3
    ],
    "data": [
        "OGR data source with driver: GeoJSON \nSource: \"https://raw.githubusercontent.com/skokenes/sierra-leone-district-geojson/master/SLE_adm2.json\", layer: \"SLE_adm2\"\nwith 14 features\nIt has 11 fields\n",
        "\n",
        "\n",
        "> ",
        "server <- function(input, output) {",
        "+ ",
        "  output$trendPlot <- renderHighchart({",
        "+ ",
        "",
        "+ ",
        "WHO_COVID_19_global_data <- read_csv(\"https://covid19.who.int/WHO-COVID-19-global-data.csv\") ",
        "+ ",
        "salone <- WHO_COVID_19_global_data %>%",
        "+ ",
        "      filter(Country == 'Sierra Leone') %>%",
        "+ ",
        "      filter(Date_reported > ymd(20200331)) %>% ",
        "+ ",
        "      mutate(Date =ymd(Date_reported))",
        "+ ",
        "salonePlot <- hchart(salone, \"column\", hcaes(x= Date, y=New_cases))%>% ",
        "+ ",
        "      hc_yAxis(",
        "+ ",
        "        title = list(text = \"New Cases\"),",
        "+ ",
        "        max = 100,",
        "+ ",
        "        opposite = FALSE",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = \"Trend in COVID-19 Cases in Sierra Leone\",",
        "+ ",
        "        align = \"center\") %>%",
        "+ ",
        "      hc_caption(",
        "+ ",
        "        text = \"Data Source: World Health Organization\",",
        "+ ",
        "        style = list(fontSize = \"12px\")",
        "+ ",
        "      )",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "   salonePlot <-  salonePlot %>% ",
        "+ ",
        "      hc_add_theme(hc_theme_bloom())",
        "+ ",
        "    ",
        "+ ",
        "    salonePlot",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$mapPlot <- renderLeaflet({",
        "+ ",
        "  ",
        "+ ",
        "  saloneMap <-  leaflet(salonePoly) %>% ",
        "+ ",
        "      addProviderTiles('CartoDB.Positron')  %>%",
        "+ ",
        "      setView(-11.79931640625, 8.504970203442133, zoom = 7) %>% ",
        "+ ",
        "      addLabelOnlyMarkers(",
        "+ ",
        "        data = saloneMapData, ~Longitude, ~Latitude, ",
        "+ ",
        "        label =~saloneMapData$`Map Label`, ",
        "+ ",
        "        clusterOptions = markerClusterOptions(iconCreateFunction=JS(\"function (cluster) {    ",
        "+ ",
        "    var childCount = cluster.getChildCount();  ",
        "+ ",
        "    if (childCount < 100) {  ",
        "+ ",
        "      c = 'rgba(196,64,64, 1.0);'",
        "+ ",
        "    } else if (childCount < 1000) {  ",
        "+ ",
        "      c = 'rgba(240, 194, 12, 1);'  ",
        "+ ",
        "    } else { ",
        "+ ",
        "      c = 'rgba(241, 128, 23, 1);'  ",
        "+ ",
        "    }    ",
        "+ ",
        "    return new L.DivIcon({ html: '<div style=\\\"background-color:'+c+'\\\"><span>' + childCount + '</span></div>', className: 'marker-cluster', iconSize: new L.Point(40, 40) });",
        "+ ",
        "",
        "+ ",
        "  }\")),",
        "+ ",
        "        labelOptions = labelOptions(",
        "+ ",
        "          noHide = T, ",
        "+ ",
        "          direction = 'auto',",
        "+ ",
        "          style = list(",
        "+ ",
        "            \"color\" = \"black\",",
        "+ ",
        "            \"font-family\" = \"arial\",",
        "+ ",
        "            \"box-shadow\" = \"2px 2px rgba(0,0,0,0.25)\",",
        "+ ",
        "            \"font-size\" = \"12px\",",
        "+ ",
        "            \"border-color\" = \"rgba(0,0,0,0.5)\"",
        "+ ",
        "          )",
        "+ ",
        "        )",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      addPolygons( weight = .8,  color = \"#5c636b\" ,fill = FALSE, stroke = TRUE, smoothFactor = 0.8) ",
        "+ ",
        "  })",
        "+ ",
        "}",
        "> ",
        "# Complete app with UI and server components",
        "> ",
        "shinyApp(ui, server)",
        "\nListening on http://127.0.0.1:6489\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  Date_reported = \u001B[34mcol_date(format = \"\")\u001B[39m,\n  Country_code = \u001B[31mcol_character()\u001B[39m,\n  Country = \u001B[31mcol_character()\u001B[39m,\n  WHO_region = \u001B[31mcol_character()\u001B[39m,\n  New_cases = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_cases = \u001B[32mcol_double()\u001B[39m,\n  New_deaths = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_deaths = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "\n",
        "\n",
        "> ",
        "server <- function(input, output) {",
        "+ ",
        "  output$trendPlot <- renderHighchart({",
        "+ ",
        "",
        "+ ",
        "WHO_COVID_19_global_data <- read_csv(\"https://covid19.who.int/WHO-COVID-19-global-data.csv\") ",
        "+ ",
        "salone <- WHO_COVID_19_global_data %>%",
        "+ ",
        "      filter(Country == 'Sierra Leone') %>%",
        "+ ",
        "      filter(Date_reported > ymd(20200331)) %>% ",
        "+ ",
        "      mutate(Date =ymd(Date_reported))",
        "+ ",
        "salonePlot <- hchart(salone, \"column\", hcaes(x= Date, y=New_cases))%>% ",
        "+ ",
        "      hc_yAxis(",
        "+ ",
        "        title = list(text = \"New Cases\"),",
        "+ ",
        "        max = 100,",
        "+ ",
        "        opposite = FALSE",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = \"Trend in COVID-19 Cases in Sierra Leone\",",
        "+ ",
        "        align = \"center\") %>%",
        "+ ",
        "      hc_caption(",
        "+ ",
        "        text = \"Data Source: World Health Organization\",",
        "+ ",
        "        style = list(fontSize = \"12px\")",
        "+ ",
        "      )",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "   salonePlot <-  salonePlot %>% ",
        "+ ",
        "      hc_add_theme(hc_theme_bloom())",
        "+ ",
        "    ",
        "+ ",
        "    salonePlot",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$mapPlot <- renderLeaflet({",
        "+ ",
        "  ",
        "+ ",
        "  saloneMap <-  leaflet(salonePoly) %>% ",
        "+ ",
        "      addProviderTiles('CartoDB.Positron')  %>%",
        "+ ",
        "      setView(-11.79931640625, 8.504970203442133, zoom = 7.5) %>% ",
        "+ ",
        "      addLabelOnlyMarkers(",
        "+ ",
        "        data = saloneMapData, ~Longitude, ~Latitude, ",
        "+ ",
        "        label =~saloneMapData$`Map Label`, ",
        "+ ",
        "        clusterOptions = markerClusterOptions(iconCreateFunction=JS(\"function (cluster) {    ",
        "+ ",
        "    var childCount = cluster.getChildCount();  ",
        "+ ",
        "    if (childCount < 100) {  ",
        "+ ",
        "      c = 'rgba(196,64,64, 1.0);'",
        "+ ",
        "    } else if (childCount < 1000) {  ",
        "+ ",
        "      c = 'rgba(240, 194, 12, 1);'  ",
        "+ ",
        "    } else { ",
        "+ ",
        "      c = 'rgba(241, 128, 23, 1);'  ",
        "+ ",
        "    }    ",
        "+ ",
        "    return new L.DivIcon({ html: '<div style=\\\"background-color:'+c+'\\\"><span>' + childCount + '</span></div>', className: 'marker-cluster', iconSize: new L.Point(40, 40) });",
        "+ ",
        "",
        "+ ",
        "  }\")),",
        "+ ",
        "        labelOptions = labelOptions(",
        "+ ",
        "          noHide = T, ",
        "+ ",
        "          direction = 'auto',",
        "+ ",
        "          style = list(",
        "+ ",
        "            \"color\" = \"black\",",
        "+ ",
        "            \"font-family\" = \"arial\",",
        "+ ",
        "            \"box-shadow\" = \"2px 2px rgba(0,0,0,0.25)\",",
        "+ ",
        "            \"font-size\" = \"12px\",",
        "+ ",
        "            \"border-color\" = \"rgba(0,0,0,0.5)\"",
        "+ ",
        "          )",
        "+ ",
        "        )",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      addPolygons( weight = .8,  color = \"#5c636b\" ,fill = FALSE, stroke = TRUE, smoothFactor = 0.8) ",
        "+ ",
        "  })",
        "+ ",
        "}",
        "> ",
        "# Complete app with UI and server components",
        "> ",
        "shinyApp(ui, server)",
        "\nListening on http://127.0.0.1:6489\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  Date_reported = \u001B[34mcol_date(format = \"\")\u001B[39m,\n  Country_code = \u001B[31mcol_character()\u001B[39m,\n  Country = \u001B[31mcol_character()\u001B[39m,\n  WHO_region = \u001B[31mcol_character()\u001B[39m,\n  New_cases = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_cases = \u001B[32mcol_double()\u001B[39m,\n  New_deaths = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_deaths = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "\n",
        "\n",
        "> ",
        "ui <- fillPage(",
        "+ ",
        "  ",
        "+ ",
        "  tabsetPanel(",
        "+ ",
        "    tabPanel(\"Trend\", highchartOutput(\"trendPlot\", height = \"100%\")), ",
        "+ ",
        "    tabPanel(\"Map\", leafletOutput(\"mapPlot\")), ",
        "+ ",
        "    tabPanel(\"Table\", tableOutput(\"table\"))",
        "+ ",
        "  )",
        "+ ",
        ")",
        "> ",
        "# Complete app with UI and server components",
        "> ",
        "shinyApp(ui, server)",
        "\nListening on http://127.0.0.1:6489\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  Date_reported = \u001B[34mcol_date(format = \"\")\u001B[39m,\n  Country_code = \u001B[31mcol_character()\u001B[39m,\n  Country = \u001B[31mcol_character()\u001B[39m,\n  WHO_region = \u001B[31mcol_character()\u001B[39m,\n  New_cases = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_cases = \u001B[32mcol_double()\u001B[39m,\n  New_deaths = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_deaths = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "\n",
        "\n",
        "> ",
        "ui <- fluidPage(",
        "+ ",
        "  ",
        "+ ",
        "  tabsetPanel(",
        "+ ",
        "    tabPanel(\"Trend\", highchartOutput(\"trendPlot\", height = \"100%\")), ",
        "+ ",
        "    tabPanel(\"Map\", leafletOutput(\"mapPlot\")), ",
        "+ ",
        "    tabPanel(\"Table\", tableOutput(\"table\"))",
        "+ ",
        "  )",
        "+ ",
        ")",
        "> ",
        "# Complete app with UI and server components",
        "> ",
        "shinyApp(ui, server)",
        "\nListening on http://127.0.0.1:6489\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  Date_reported = \u001B[34mcol_date(format = \"\")\u001B[39m,\n  Country_code = \u001B[31mcol_character()\u001B[39m,\n  Country = \u001B[31mcol_character()\u001B[39m,\n  WHO_region = \u001B[31mcol_character()\u001B[39m,\n  New_cases = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_cases = \u001B[32mcol_double()\u001B[39m,\n  New_deaths = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_deaths = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "\n",
        "\n",
        "> ",
        "saloneMapData",
        "\u001B[38;5;246m# A tibble: 16 x 11\u001B[39m\n   District Cases Status Deaths Capital Province Population `Cases per 100,…\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<lgl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m         \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m Bo         113 Low    \u001B[31mNA\u001B[39m     Bo      Southern     \u001B[4m5\u001B[24m\u001B[4m7\u001B[24m\u001B[4m5\u001B[24m478             19.6\n\u001B[38;5;250m 2\u001B[39m Bombali     51 Low    \u001B[31mNA\u001B[39m     Makeni  Northern     \u001B[4m6\u001B[24m\u001B[4m0\u001B[24m\u001B[4m6\u001B[24m544              8.4\n\u001B[38;5;250m 3\u001B[39m Bonthe      87 Low    \u001B[31mNA\u001B[39m     Bonthe  Southern     \u001B[4m2\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m781             43.3\n\u001B[38;5;250m 4\u001B[39m Falaba      11 Very … \u001B[31mNA\u001B[39m     Bendugu Northern     \u001B[4m2\u001B[24m\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m353              5.4\n\u001B[38;5;250m 5\u001B[39m Kailahun    95 Low    \u001B[31mNA\u001B[39m     Kailah… Eastern      \u001B[4m5\u001B[24m\u001B[4m2\u001B[24m\u001B[4m6\u001B[24m379             18  \n\u001B[38;5;250m 6\u001B[39m Kambia      30 Low    \u001B[31mNA\u001B[39m     Kambia  North W…     \u001B[4m3\u001B[24m\u001B[4m4\u001B[24m\u001B[4m5\u001B[24m474              8.7\n\u001B[38;5;250m 7\u001B[39m Karene      11 Very … \u001B[31mNA\u001B[39m     Kamakw… North W…     \u001B[4m2\u001B[24m\u001B[4m8\u001B[24m\u001B[4m5\u001B[24m546              3.9\n\u001B[38;5;250m 8\u001B[39m Kenema     127 Medium \u001B[31mNA\u001B[39m     Kenema  Eastern      \u001B[4m6\u001B[24m\u001B[4m0\u001B[24m\u001B[4m9\u001B[24m891             20.8\n\u001B[38;5;250m 9\u001B[39m Koinadu…    36 Low    \u001B[31mNA\u001B[39m     Kabala  Northern     \u001B[4m4\u001B[24m\u001B[4m0\u001B[24m\u001B[4m9\u001B[24m372              8.8\n\u001B[38;5;250m10\u001B[39m Kono        76 Low    \u001B[31mNA\u001B[39m     Koidu … Eastern      \u001B[4m5\u001B[24m\u001B[4m0\u001B[24m\u001B[4m6\u001B[24m100             15  \n\u001B[38;5;250m11\u001B[39m Moyamba     58 Low    \u001B[31mNA\u001B[39m     Moyamba Southern     \u001B[4m3\u001B[24m\u001B[4m1\u001B[24m\u001B[4m8\u001B[24m588             18.2\n\u001B[38;5;250m12\u001B[39m Port Lo…   118 Low    \u001B[31mNA\u001B[39m     Port L… North W…     \u001B[4m6\u001B[24m\u001B[4m1\u001B[24m\u001B[4m5\u001B[24m376             19.2\n\u001B[38;5;250m13\u001B[39m Pujehun     28 Low    \u001B[31mNA\u001B[39m     Pujehun Southern     \u001B[4m3\u001B[24m\u001B[4m4\u001B[24m\u001B[4m6\u001B[24m461              8.1\n\u001B[38;5;250m14\u001B[39m Tonkoli…    80 Low    \u001B[31mNA\u001B[39m     Magbur… Northern     \u001B[4m5\u001B[24m\u001B[4m3\u001B[24m\u001B[4m1\u001B[24m435             15.1\n\u001B[38;5;250m15\u001B[39m Western…   299 High   \u001B[31mNA\u001B[39m     Waterl… Western      \u001B[4m4\u001B[24m\u001B[4m4\u001B[24m\u001B[4m4\u001B[24m270             67.3\n\u001B[38;5;250m16\u001B[39m Western…  \u001B[4m1\u001B[24m157 High   \u001B[31mNA\u001B[39m     Freeto… Western     1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m5\u001B[24m964            110. \n\u001B[38;5;246m# … with 3 more variables: Latitude \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m, Longitude \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m, `Map Label` \u001B[3m\u001B[38;5;246m<chr>\u001B[38;5;246m\u001B[23m\u001B[39m",
        "\n",
        "> ",
        "saloneMapData <- saloneMapData %>% ",
        "+ ",
        "  select(District,Cases,`Cases per 100,000`)",
        "> ",
        "server <- function(input, output) {",
        "+ ",
        "  output$trendPlot <- renderHighchart({",
        "+ ",
        "",
        "+ ",
        "WHO_COVID_19_global_data <- read_csv(\"https://covid19.who.int/WHO-COVID-19-global-data.csv\") ",
        "+ ",
        "salone <- WHO_COVID_19_global_data %>%",
        "+ ",
        "      filter(Country == 'Sierra Leone') %>%",
        "+ ",
        "      filter(Date_reported > ymd(20200331)) %>% ",
        "+ ",
        "      mutate(Date =ymd(Date_reported))",
        "+ ",
        "salonePlot <- hchart(salone, \"column\", hcaes(x= Date, y=New_cases))%>% ",
        "+ ",
        "      hc_yAxis(",
        "+ ",
        "        title = list(text = \"New Cases\"),",
        "+ ",
        "        max = 100,",
        "+ ",
        "        opposite = FALSE",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = \"Trend in COVID-19 Cases in Sierra Leone\",",
        "+ ",
        "        align = \"center\") %>%",
        "+ ",
        "      hc_caption(",
        "+ ",
        "        text = \"Data Source: World Health Organization\",",
        "+ ",
        "        style = list(fontSize = \"12px\")",
        "+ ",
        "      )",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "   salonePlot <-  salonePlot %>% ",
        "+ ",
        "      hc_add_theme(hc_theme_bloom())",
        "+ ",
        "    ",
        "+ ",
        "    salonePlot",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$mapPlot <- renderLeaflet({",
        "+ ",
        "    saloneMapData <- read_csv('saloneMapData.csv') ",
        "+ ",
        "    ",
        "+ ",
        "    saloneMapData <- saloneMapData %>% ",
        "+ ",
        "      select(District,Cases,`Cases per 100,000`)",
        "+ ",
        "    salonePoly <- readOGR('https://raw.githubusercontent.com/skokenes/sierra-leone-district-geojson/master/SLE_adm2.json')",
        "+ ",
        "    ",
        "+ ",
        "  saloneMap <-  leaflet(salonePoly) %>% ",
        "+ ",
        "      addProviderTiles('CartoDB.Positron')  %>%",
        "+ ",
        "      setView(-11.79931640625, 8.504970203442133, zoom = 7.5) %>% ",
        "+ ",
        "      addLabelOnlyMarkers(",
        "+ ",
        "        data = saloneMapData, ~Longitude, ~Latitude, ",
        "+ ",
        "        label =~saloneMapData$`Map Label`, ",
        "+ ",
        "        clusterOptions = markerClusterOptions(iconCreateFunction=JS(\"function (cluster) {    ",
        "+ ",
        "    var childCount = cluster.getChildCount();  ",
        "+ ",
        "    if (childCount < 100) {  ",
        "+ ",
        "      c = 'rgba(196,64,64, 1.0);'",
        "+ ",
        "    } else if (childCount < 1000) {  ",
        "+ ",
        "      c = 'rgba(240, 194, 12, 1);'  ",
        "+ ",
        "    } else { ",
        "+ ",
        "      c = 'rgba(241, 128, 23, 1);'  ",
        "+ ",
        "    }    ",
        "+ ",
        "    return new L.DivIcon({ html: '<div style=\\\"background-color:'+c+'\\\"><span>' + childCount + '</span></div>', className: 'marker-cluster', iconSize: new L.Point(40, 40) });",
        "+ ",
        "",
        "+ ",
        "  }\")),",
        "+ ",
        "        labelOptions = labelOptions(",
        "+ ",
        "          noHide = T, ",
        "+ ",
        "          direction = 'auto',",
        "+ ",
        "          style = list(",
        "+ ",
        "            \"color\" = \"black\",",
        "+ ",
        "            \"font-family\" = \"arial\",",
        "+ ",
        "            \"box-shadow\" = \"2px 2px rgba(0,0,0,0.25)\",",
        "+ ",
        "            \"font-size\" = \"12px\",",
        "+ ",
        "            \"border-color\" = \"rgba(0,0,0,0.5)\"",
        "+ ",
        "          )",
        "+ ",
        "        )",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      addPolygons( weight = .8,  color = \"#5c636b\" ,fill = FALSE, stroke = TRUE, smoothFactor = 0.8) ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$table <- renderTable({",
        "+ ",
        "    saloneMapData <- read_csv('saloneMapData.csv')",
        "+ ",
        "    saloneMapData <- saloneMapData %>%",
        "+ ",
        "      select(District,Cases,`Cases per 100,000`)",
        "+ ",
        "    })",
        "+ ",
        "}",
        "> ",
        "ui <- fluidPage(",
        "+ ",
        "  ",
        "+ ",
        "  tabsetPanel(",
        "+ ",
        "    tabPanel(\"Trend\", highchartOutput(\"trendPlot\", height = \"100%\")), ",
        "+ ",
        "    tabPanel(\"Map\", leafletOutput(\"mapPlot\")), ",
        "+ ",
        "    tabPanel(\"Table\", tableOutput(\"tablePlot\"))",
        "+ ",
        "  )",
        "+ ",
        ")",
        "> ",
        "# Complete app with UI and server components",
        "> ",
        "shinyApp(ui, server)",
        "\nListening on http://127.0.0.1:6489\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  Date_reported = \u001B[34mcol_date(format = \"\")\u001B[39m,\n  Country_code = \u001B[31mcol_character()\u001B[39m,\n  Country = \u001B[31mcol_character()\u001B[39m,\n  WHO_region = \u001B[31mcol_character()\u001B[39m,\n  New_cases = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_cases = \u001B[32mcol_double()\u001B[39m,\n  New_deaths = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_deaths = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  District = \u001B[31mcol_character()\u001B[39m,\n  Cases = \u001B[32mcol_double()\u001B[39m,\n  Status = \u001B[31mcol_character()\u001B[39m,\n  Deaths = \u001B[33mcol_logical()\u001B[39m,\n  Capital = \u001B[31mcol_character()\u001B[39m,\n  Province = \u001B[31mcol_character()\u001B[39m,\n  Population = \u001B[32mcol_number()\u001B[39m,\n  `Cases per 100,000` = \u001B[32mcol_double()\u001B[39m,\n  Latitude = \u001B[32mcol_double()\u001B[39m,\n  Longitude = \u001B[32mcol_double()\u001B[39m,\n  `Map Label` = \u001B[31mcol_character()\u001B[39m\n)\n\n",
        "OGR data source with driver: GeoJSON \nSource: \"https://raw.githubusercontent.com/skokenes/sierra-leone-district-geojson/master/SLE_adm2.json\", layer: \"SLE_adm2\"\nwith 14 features\nIt has 11 fields\n",
        "Warning:",
        " Error in eval: object 'Longitude' not found\n",
        "  [No stack trace available]\n",
        "\n",
        "\n",
        "> ",
        "server <- function(input, output) {",
        "+ ",
        "  output$trendPlot <- renderHighchart({",
        "+ ",
        "",
        "+ ",
        "WHO_COVID_19_global_data <- read_csv(\"https://covid19.who.int/WHO-COVID-19-global-data.csv\") ",
        "+ ",
        "salone <- WHO_COVID_19_global_data %>%",
        "+ ",
        "      filter(Country == 'Sierra Leone') %>%",
        "+ ",
        "      filter(Date_reported > ymd(20200331)) %>% ",
        "+ ",
        "      mutate(Date =ymd(Date_reported))",
        "+ ",
        "salonePlot <- hchart(salone, \"column\", hcaes(x= Date, y=New_cases))%>% ",
        "+ ",
        "      hc_yAxis(",
        "+ ",
        "        title = list(text = \"New Cases\"),",
        "+ ",
        "        max = 100,",
        "+ ",
        "        opposite = FALSE",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = \"Trend in COVID-19 Cases in Sierra Leone\",",
        "+ ",
        "        align = \"center\") %>%",
        "+ ",
        "      hc_caption(",
        "+ ",
        "        text = \"Data Source: World Health Organization\",",
        "+ ",
        "        style = list(fontSize = \"12px\")",
        "+ ",
        "      )",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "   salonePlot <-  salonePlot %>% ",
        "+ ",
        "      hc_add_theme(hc_theme_bloom())",
        "+ ",
        "    ",
        "+ ",
        "    salonePlot",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$mapPlot <- renderLeaflet({",
        "+ ",
        "    saloneMapData <- read_csv('saloneMapData.csv') ",
        "+ ",
        "    ",
        "+ ",
        "    saloneMapData <- saloneMapData %>% ",
        "+ ",
        "      select(District,Cases,`Cases per 100,000`)",
        "+ ",
        "  salonePoly <- readOGR('https://raw.githubusercontent.com/skokenes/sierra-leone-district-geojson/master/SLE_adm2.json')",
        "+ ",
        "    ",
        "+ ",
        "  saloneMap <-  leaflet(salonePoly) %>% ",
        "+ ",
        "      addProviderTiles('CartoDB.Positron')  %>%",
        "+ ",
        "      setView(-11.79931640625, 8.504970203442133, zoom = 7.5) %>% ",
        "+ ",
        "      addLabelOnlyMarkers(",
        "+ ",
        "        data = saloneMapData, ~Longitude, ~Latitude, ",
        "+ ",
        "        label =~saloneMapData$`Map Label`, ",
        "+ ",
        "        clusterOptions = markerClusterOptions(iconCreateFunction=JS(\"function (cluster) {    ",
        "+ ",
        "    var childCount = cluster.getChildCount();  ",
        "+ ",
        "    if (childCount < 100) {  ",
        "+ ",
        "      c = 'rgba(196,64,64, 1.0);'",
        "+ ",
        "    } else if (childCount < 1000) {  ",
        "+ ",
        "      c = 'rgba(240, 194, 12, 1);'  ",
        "+ ",
        "    } else { ",
        "+ ",
        "      c = 'rgba(241, 128, 23, 1);'  ",
        "+ ",
        "    }    ",
        "+ ",
        "    return new L.DivIcon({ html: '<div style=\\\"background-color:'+c+'\\\"><span>' + childCount + '</span></div>', className: 'marker-cluster', iconSize: new L.Point(40, 40) });",
        "+ ",
        "",
        "+ ",
        "  }\")),",
        "+ ",
        "        labelOptions = labelOptions(",
        "+ ",
        "          noHide = T, ",
        "+ ",
        "          direction = 'auto',",
        "+ ",
        "          style = list(",
        "+ ",
        "            \"color\" = \"black\",",
        "+ ",
        "            \"font-family\" = \"arial\",",
        "+ ",
        "            \"box-shadow\" = \"2px 2px rgba(0,0,0,0.25)\",",
        "+ ",
        "            \"font-size\" = \"12px\",",
        "+ ",
        "            \"border-color\" = \"rgba(0,0,0,0.5)\"",
        "+ ",
        "          )",
        "+ ",
        "        )",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      addPolygons( weight = .8,  color = \"#5c636b\" ,fill = FALSE, stroke = TRUE, smoothFactor = 0.8) ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$table <- renderTable({",
        "+ ",
        "    saloneMapData <- read_csv('saloneMapData.csv')",
        "+ ",
        "    saloneMapData <- saloneMapData %>%",
        "+ ",
        "      select(District,Cases,`Cases per 100,000`)",
        "+ ",
        "    })",
        "+ ",
        "}",
        "> ",
        "# Complete app with UI and server components",
        "> ",
        "shinyApp(ui, server)",
        "\nListening on http://127.0.0.1:6489\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  Date_reported = \u001B[34mcol_date(format = \"\")\u001B[39m,\n  Country_code = \u001B[31mcol_character()\u001B[39m,\n  Country = \u001B[31mcol_character()\u001B[39m,\n  WHO_region = \u001B[31mcol_character()\u001B[39m,\n  New_cases = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_cases = \u001B[32mcol_double()\u001B[39m,\n  New_deaths = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_deaths = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  District = \u001B[31mcol_character()\u001B[39m,\n  Cases = \u001B[32mcol_double()\u001B[39m,\n  Status = \u001B[31mcol_character()\u001B[39m,\n  Deaths = \u001B[33mcol_logical()\u001B[39m,\n  Capital = \u001B[31mcol_character()\u001B[39m,\n  Province = \u001B[31mcol_character()\u001B[39m,\n  Population = \u001B[32mcol_number()\u001B[39m,\n  `Cases per 100,000` = \u001B[32mcol_double()\u001B[39m,\n  Latitude = \u001B[32mcol_double()\u001B[39m,\n  Longitude = \u001B[32mcol_double()\u001B[39m,\n  `Map Label` = \u001B[31mcol_character()\u001B[39m\n)\n\n",
        "OGR data source with driver: GeoJSON \nSource: \"https://raw.githubusercontent.com/skokenes/sierra-leone-district-geojson/master/SLE_adm2.json\", layer: \"SLE_adm2\"\nwith 14 features\nIt has 11 fields\n",
        "Warning:",
        " Error in eval: object 'Longitude' not found\n",
        "  [No stack trace available]\n",
        "\n",
        "\n",
        "> ",
        "server <- function(input, output) {",
        "+ ",
        "  output$trendPlot <- renderHighchart({",
        "+ ",
        "",
        "+ ",
        "WHO_COVID_19_global_data <- read_csv(\"https://covid19.who.int/WHO-COVID-19-global-data.csv\") ",
        "+ ",
        "salone <- WHO_COVID_19_global_data %>%",
        "+ ",
        "      filter(Country == 'Sierra Leone') %>%",
        "+ ",
        "      filter(Date_reported > ymd(20200331)) %>% ",
        "+ ",
        "      mutate(Date =ymd(Date_reported))",
        "+ ",
        "salonePlot <- hchart(salone, \"column\", hcaes(x= Date, y=New_cases))%>% ",
        "+ ",
        "      hc_yAxis(",
        "+ ",
        "        title = list(text = \"New Cases\"),",
        "+ ",
        "        max = 100,",
        "+ ",
        "        opposite = FALSE",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = \"Trend in COVID-19 Cases in Sierra Leone\",",
        "+ ",
        "        align = \"center\") %>%",
        "+ ",
        "      hc_caption(",
        "+ ",
        "        text = \"Data Source: World Health Organization\",",
        "+ ",
        "        style = list(fontSize = \"12px\")",
        "+ ",
        "      )",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "   salonePlot <-  salonePlot %>% ",
        "+ ",
        "      hc_add_theme(hc_theme_bloom())",
        "+ ",
        "    ",
        "+ ",
        "    salonePlot",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$mapPlot <- renderLeaflet({",
        "+ ",
        "    saloneMapData <- read_csv('saloneMapData.csv') ",
        "+ ",
        "    ",
        "+ ",
        "  salonePoly <- readOGR('https://raw.githubusercontent.com/skokenes/sierra-leone-district-geojson/master/SLE_adm2.json')",
        "+ ",
        "    ",
        "+ ",
        "  saloneMap <-  leaflet(salonePoly) %>% ",
        "+ ",
        "      addProviderTiles('CartoDB.Positron')  %>%",
        "+ ",
        "      setView(-11.79931640625, 8.504970203442133, zoom = 7.5) %>% ",
        "+ ",
        "      addLabelOnlyMarkers(",
        "+ ",
        "        data = saloneMapData, ~Longitude, ~Latitude, ",
        "+ ",
        "        label =~saloneMapData$`Map Label`, ",
        "+ ",
        "        clusterOptions = markerClusterOptions(iconCreateFunction=JS(\"function (cluster) {    ",
        "+ ",
        "    var childCount = cluster.getChildCount();  ",
        "+ ",
        "    if (childCount < 100) {  ",
        "+ ",
        "      c = 'rgba(196,64,64, 1.0);'",
        "+ ",
        "    } else if (childCount < 1000) {  ",
        "+ ",
        "      c = 'rgba(240, 194, 12, 1);'  ",
        "+ ",
        "    } else { ",
        "+ ",
        "      c = 'rgba(241, 128, 23, 1);'  ",
        "+ ",
        "    }    ",
        "+ ",
        "    return new L.DivIcon({ html: '<div style=\\\"background-color:'+c+'\\\"><span>' + childCount + '</span></div>', className: 'marker-cluster', iconSize: new L.Point(40, 40) });",
        "+ ",
        "",
        "+ ",
        "  }\")),",
        "+ ",
        "        labelOptions = labelOptions(",
        "+ ",
        "          noHide = T, ",
        "+ ",
        "          direction = 'auto',",
        "+ ",
        "          style = list(",
        "+ ",
        "            \"color\" = \"black\",",
        "+ ",
        "            \"font-family\" = \"arial\",",
        "+ ",
        "            \"box-shadow\" = \"2px 2px rgba(0,0,0,0.25)\",",
        "+ ",
        "            \"font-size\" = \"12px\",",
        "+ ",
        "            \"border-color\" = \"rgba(0,0,0,0.5)\"",
        "+ ",
        "          )",
        "+ ",
        "        )",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      addPolygons( weight = .8,  color = \"#5c636b\" ,fill = FALSE, stroke = TRUE, smoothFactor = 0.8) ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$table <- renderTable({",
        "+ ",
        "    saloneMapData <- read_csv('saloneMapData.csv')",
        "+ ",
        "    saloneMapData <- saloneMapData %>%",
        "+ ",
        "      select(District,Cases,`Cases per 100,000`)",
        "+ ",
        "    })",
        "+ ",
        "}",
        "> ",
        "# Complete app with UI and server components",
        "> ",
        "shinyApp(ui, server)",
        "\nListening on http://127.0.0.1:6489\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  Date_reported = \u001B[34mcol_date(format = \"\")\u001B[39m,\n  Country_code = \u001B[31mcol_character()\u001B[39m,\n  Country = \u001B[31mcol_character()\u001B[39m,\n  WHO_region = \u001B[31mcol_character()\u001B[39m,\n  New_cases = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_cases = \u001B[32mcol_double()\u001B[39m,\n  New_deaths = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_deaths = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  District = \u001B[31mcol_character()\u001B[39m,\n  Cases = \u001B[32mcol_double()\u001B[39m,\n  Status = \u001B[31mcol_character()\u001B[39m,\n  Deaths = \u001B[33mcol_logical()\u001B[39m,\n  Capital = \u001B[31mcol_character()\u001B[39m,\n  Province = \u001B[31mcol_character()\u001B[39m,\n  Population = \u001B[32mcol_number()\u001B[39m,\n  `Cases per 100,000` = \u001B[32mcol_double()\u001B[39m,\n  Latitude = \u001B[32mcol_double()\u001B[39m,\n  Longitude = \u001B[32mcol_double()\u001B[39m,\n  `Map Label` = \u001B[31mcol_character()\u001B[39m\n)\n\n",
        "OGR data source with driver: GeoJSON \nSource: \"https://raw.githubusercontent.com/skokenes/sierra-leone-district-geojson/master/SLE_adm2.json\", layer: \"SLE_adm2\"\nwith 14 features\nIt has 11 fields\n",
        "\n",
        "\n",
        "> ",
        "server <- function(input, output) {",
        "+ ",
        "  output$trendPlot <- renderHighchart({",
        "+ ",
        "",
        "+ ",
        "WHO_COVID_19_global_data <- read_csv(\"https://covid19.who.int/WHO-COVID-19-global-data.csv\") ",
        "+ ",
        "salone <- WHO_COVID_19_global_data %>%",
        "+ ",
        "      filter(Country == 'Sierra Leone') %>%",
        "+ ",
        "      filter(Date_reported > ymd(20200331)) %>% ",
        "+ ",
        "      mutate(Date =ymd(Date_reported))",
        "+ ",
        "salonePlot <- hchart(salone, \"column\", hcaes(x= Date, y=New_cases))%>% ",
        "+ ",
        "      hc_yAxis(",
        "+ ",
        "        title = list(text = \"New Cases\"),",
        "+ ",
        "        max = 100,",
        "+ ",
        "        opposite = FALSE",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      hc_title(",
        "+ ",
        "        text = \"Trend in COVID-19 Cases in Sierra Leone\",",
        "+ ",
        "        align = \"center\") %>%",
        "+ ",
        "      hc_caption(",
        "+ ",
        "        text = \"Data Source: World Health Organization\",",
        "+ ",
        "        style = list(fontSize = \"12px\")",
        "+ ",
        "      )",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "   salonePlot <-  salonePlot %>% ",
        "+ ",
        "      hc_add_theme(hc_theme_bloom())",
        "+ ",
        "    ",
        "+ ",
        "    salonePlot",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$mapPlot <- renderLeaflet({",
        "+ ",
        "    saloneMapData <- read_csv('saloneMapData.csv') ",
        "+ ",
        "    ",
        "+ ",
        "  salonePoly <- readOGR('https://raw.githubusercontent.com/skokenes/sierra-leone-district-geojson/master/SLE_adm2.json')",
        "+ ",
        "    ",
        "+ ",
        "  saloneMap <-  leaflet(salonePoly) %>% ",
        "+ ",
        "      addProviderTiles('CartoDB.Positron')  %>%",
        "+ ",
        "      setView(-11.79931640625, 8.504970203442133, zoom = 7.5) %>% ",
        "+ ",
        "      addLabelOnlyMarkers(",
        "+ ",
        "        data = saloneMapData, ~Longitude, ~Latitude, ",
        "+ ",
        "        label =~saloneMapData$`Map Label`, ",
        "+ ",
        "        clusterOptions = markerClusterOptions(iconCreateFunction=JS(\"function (cluster) {    ",
        "+ ",
        "    var childCount = cluster.getChildCount();  ",
        "+ ",
        "    if (childCount < 100) {  ",
        "+ ",
        "      c = 'rgba(196,64,64, 1.0);'",
        "+ ",
        "    } else if (childCount < 1000) {  ",
        "+ ",
        "      c = 'rgba(240, 194, 12, 1);'  ",
        "+ ",
        "    } else { ",
        "+ ",
        "      c = 'rgba(241, 128, 23, 1);'  ",
        "+ ",
        "    }    ",
        "+ ",
        "    return new L.DivIcon({ html: '<div style=\\\"background-color:'+c+'\\\"><span>' + childCount + '</span></div>', className: 'marker-cluster', iconSize: new L.Point(40, 40) });",
        "+ ",
        "",
        "+ ",
        "  }\")),",
        "+ ",
        "        labelOptions = labelOptions(",
        "+ ",
        "          noHide = T, ",
        "+ ",
        "          direction = 'auto',",
        "+ ",
        "          style = list(",
        "+ ",
        "            \"color\" = \"black\",",
        "+ ",
        "            \"font-family\" = \"arial\",",
        "+ ",
        "            \"box-shadow\" = \"2px 2px rgba(0,0,0,0.25)\",",
        "+ ",
        "            \"font-size\" = \"12px\",",
        "+ ",
        "            \"border-color\" = \"rgba(0,0,0,0.5)\"",
        "+ ",
        "          )",
        "+ ",
        "        )",
        "+ ",
        "      ) %>% ",
        "+ ",
        "      addPolygons( weight = .8,  color = \"#5c636b\" ,fill = FALSE, stroke = TRUE, smoothFactor = 0.8) ",
        "+ ",
        "  })",
        "+ ",
        "  ",
        "+ ",
        "  output$tablePlot<- renderTable({",
        "+ ",
        "    saloneMapData <- read_csv('saloneMapData.csv')",
        "+ ",
        "    saloneMapData <- saloneMapData %>%",
        "+ ",
        "      select(District,Cases,`Cases per 100,000`)",
        "+ ",
        "    })",
        "+ ",
        "}",
        "> ",
        "# Complete app with UI and server components",
        "> ",
        "shinyApp(ui, server)",
        "\nListening on http://127.0.0.1:6489\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  Date_reported = \u001B[34mcol_date(format = \"\")\u001B[39m,\n  Country_code = \u001B[31mcol_character()\u001B[39m,\n  Country = \u001B[31mcol_character()\u001B[39m,\n  WHO_region = \u001B[31mcol_character()\u001B[39m,\n  New_cases = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_cases = \u001B[32mcol_double()\u001B[39m,\n  New_deaths = \u001B[32mcol_double()\u001B[39m,\n  Cumulative_deaths = \u001B[32mcol_double()\u001B[39m\n)\n\n",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  District = \u001B[31mcol_character()\u001B[39m,\n  Cases = \u001B[32mcol_double()\u001B[39m,\n  Status = \u001B[31mcol_character()\u001B[39m,\n  Deaths = \u001B[33mcol_logical()\u001B[39m,\n  Capital = \u001B[31mcol_character()\u001B[39m,\n  Province = \u001B[31mcol_character()\u001B[39m,\n  Population = \u001B[32mcol_number()\u001B[39m,\n  `Cases per 100,000` = \u001B[32mcol_double()\u001B[39m,\n  Latitude = \u001B[32mcol_double()\u001B[39m,\n  Longitude = \u001B[32mcol_double()\u001B[39m,\n  `Map Label` = \u001B[31mcol_character()\u001B[39m\n)\n\n",
        "\n",
        "\n",
        "> ",
        "View(saloneMapData)",
        "> ",
        " saloneMapData <- read_csv('saloneMapData.csv')",
        "\n\u001B[36m──\u001B[39m \u001B[1m\u001B[1mColumn specification\u001B[1m\u001B[22m \u001B[36m─────────────────────────────────────────────────────────\u001B[39m\ncols(\n  District = \u001B[31mcol_character()\u001B[39m,\n  Cases = \u001B[32mcol_double()\u001B[39m,\n  Status = \u001B[31mcol_character()\u001B[39m,\n  Deaths = \u001B[33mcol_logical()\u001B[39m,\n  Capital = \u001B[31mcol_character()\u001B[39m,\n  Province = \u001B[31mcol_character()\u001B[39m,\n  Population = \u001B[32mcol_number()\u001B[39m,\n  `Cases per 100,000` = \u001B[32mcol_double()\u001B[39m,\n  Latitude = \u001B[32mcol_double()\u001B[39m,\n  Longitude = \u001B[32mcol_double()\u001B[39m,\n  `Map Label` = \u001B[31mcol_character()\u001B[39m\n)\n\n",
        "> ",
        "View(saloneMapData)",
        "> ",
        "saloneMapData",
        "\u001B[38;5;246m# A tibble: 16 x 11\u001B[39m\n   District Cases Status Deaths Capital Province Population `Cases per 100,…\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<lgl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m         \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m Bo         113 Low    \u001B[31mNA\u001B[39m     Bo      Southern     \u001B[4m5\u001B[24m\u001B[4m7\u001B[24m\u001B[4m5\u001B[24m478             19.6\n\u001B[38;5;250m 2\u001B[39m Bombali     51 Low    \u001B[31mNA\u001B[39m     Makeni  Northern     \u001B[4m6\u001B[24m\u001B[4m0\u001B[24m\u001B[4m6\u001B[24m544              8.4\n\u001B[38;5;250m 3\u001B[39m Bonthe      87 Low    \u001B[31mNA\u001B[39m     Bonthe  Southern     \u001B[4m2\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m781             43.3\n\u001B[38;5;250m 4\u001B[39m Falaba      11 Very … \u001B[31mNA\u001B[39m     Bendugu Northern     \u001B[4m2\u001B[24m\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m353              5.4\n\u001B[38;5;250m 5\u001B[39m Kailahun    95 Low    \u001B[31mNA\u001B[39m     Kailah… Eastern      \u001B[4m5\u001B[24m\u001B[4m2\u001B[24m\u001B[4m6\u001B[24m379             18  \n\u001B[38;5;250m 6\u001B[39m Kambia      30 Low    \u001B[31mNA\u001B[39m     Kambia  North W…     \u001B[4m3\u001B[24m\u001B[4m4\u001B[24m\u001B[4m5\u001B[24m474              8.7\n\u001B[38;5;250m 7\u001B[39m Karene      11 Very … \u001B[31mNA\u001B[39m     Kamakw… North W…     \u001B[4m2\u001B[24m\u001B[4m8\u001B[24m\u001B[4m5\u001B[24m546              3.9\n\u001B[38;5;250m 8\u001B[39m Kenema     127 Medium \u001B[31mNA\u001B[39m     Kenema  Eastern      \u001B[4m6\u001B[24m\u001B[4m0\u001B[24m\u001B[4m9\u001B[24m891             20.8\n\u001B[38;5;250m 9\u001B[39m Koinadu…    36 Low    \u001B[31mNA\u001B[39m     Kabala  Northern     \u001B[4m4\u001B[24m\u001B[4m0\u001B[24m\u001B[4m9\u001B[24m372              8.8\n\u001B[38;5;250m10\u001B[39m Kono        76 Low    \u001B[31mNA\u001B[39m     Koidu … Eastern      \u001B[4m5\u001B[24m\u001B[4m0\u001B[24m\u001B[4m6\u001B[24m100             15  \n\u001B[38;5;250m11\u001B[39m Moyamba     58 Low    \u001B[31mNA\u001B[39m     Moyamba Southern     \u001B[4m3\u001B[24m\u001B[4m1\u001B[24m\u001B[4m8\u001B[24m588             18.2\n\u001B[38;5;250m12\u001B[39m Port Lo…   118 Low    \u001B[31mNA\u001B[39m     Port L… North W…     \u001B[4m6\u001B[24m\u001B[4m1\u001B[24m\u001B[4m5\u001B[24m376             19.2\n\u001B[38;5;250m13\u001B[39m Pujehun     28 Low    \u001B[31mNA\u001B[39m     Pujehun Southern     \u001B[4m3\u001B[24m\u001B[4m4\u001B[24m\u001B[4m6\u001B[24m461              8.1\n\u001B[38;5;250m14\u001B[39m Tonkoli…    80 Low    \u001B[31mNA\u001B[39m     Magbur… Northern     \u001B[4m5\u001B[24m\u001B[4m3\u001B[24m\u001B[4m1\u001B[24m435             15.1\n\u001B[38;5;250m15\u001B[39m Western…   299 High   \u001B[31mNA\u001B[39m     Waterl… Western      \u001B[4m4\u001B[24m\u001B[4m4\u001B[24m\u001B[4m4\u001B[24m270             67.3\n\u001B[38;5;250m16\u001B[39m Western…  \u001B[4m1\u001B[24m157 High   \u001B[31mNA\u001B[39m     Freeto… Western     1\u001B[4m0\u001B[24m\u001B[4m5\u001B[24m\u001B[4m5\u001B[24m964            110. \n\u001B[38;5;246m# … with 3 more variables: Latitude \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m, Longitude \u001B[3m\u001B[38;5;246m<dbl>\u001B[38;5;246m\u001B[23m, `Map Label` \u001B[3m\u001B[38;5;246m<chr>\u001B[38;5;246m\u001B[23m\u001B[39m",
        "\n",
        "> ",
        "install.packages('rsconnect')",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n",
        "Error: C stack usage  7969216 is too close to the limit\n",
        "Error saving session (options): R code execution error\n"
    ]
}