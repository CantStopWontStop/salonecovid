library(leaflet)
# get covid data
cbsaPopRaw<- read_csv("https://www2.census.gov/programs-surveys/popest/datasets/2010-2019/metro/totals/cbsa-est2019-alldata.csv") 

cities <- c('New York-Newark-Jersey City, NY-NJ-PA','Dallas-Fort Worth-Arlington, TX','Houston-The Woodlands-Sugar Land, TX','Washington-Arlington-Alexandria, DC-VA-MD-WV','Philadelphia-Camden-Wilmington, PA-NJ-DE-MD','Atlanta-Sandy Springs-Alpharetta, GA','Charlotte-Concord-Gastonia, NC-SC'
)

cbsaPop <- cbsaPopRaw %>% 
  filter(NAME %in% cities) %>% 
  mutate(Population = POPESTIMATE2019)%>% 
  select(CBSA,NAME,Population,STCOU) %>% 
  arrange(desc(Population))


cbsaCaseRaw <- read_csv('https://usafactsstatic.blob.core.windows.net/public/data/covid-19/covid_confirmed_usafacts.csv')

codes <- cbsaPop$CBSA


counties <- cbsaPopRaw %>% 
  filter(CBSA %in% codes) %>% 
  filter( !is.na(STCOU)) %>% 
  mutate(Population = POPESTIMATE2019)%>% 
  select(CBSA, STCOU,NAME,Population) %>% 
  left_join(cbsaPop, by = c("CBSA"='CBSA')) %>% 
  mutate(FIPS = as.numeric(STCOU.x))



cbsaCase <- counties %>% 
  left_join(cbsaCaseRaw, by =c("FIPS"="countyFIPS")) %>% 
  gather(-c(1:11),key ='Date', value = "Cases") %>% 
  group_by(CBSA, NAME.y, Date) %>% 
  summarise(sum(Population.x), sum(Cases)) 

library(leaflet)

m <- leaflet(saloneMapData) %>% 
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(~Longitude, ~Latitude, label = ~Cases)

m
saloneMapData <- read_csv('saloneMapData.csv')
